name: Integration Test

on:
  pull_request_target:
    types: [ labeled, opened, synchronize, reopened, ready_for_review ]
    branches:
      - "main"
      - "release-**"
    paths-ignore:
      - "docs/**"
      - "**.md"
      - CODEOWNERS
      - LICENSE
      - "LICENSES/**"
      - ".reuse/**"
      - "config/**"
      - "data/**"
      - "scripts/**"

jobs:
  integration-test:
    if: contains(github.event.pull_request.labels.*.name, 'run-integration-test')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Extract Python version
        id: python-version
        run: ./scripts/shell/extract-python-version.sh

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --with dev

      - name: Prepare test configurations
        id: int-tests-configs
        env:
          AICORE_SECRET: ${{ secrets.AICORE_SECRET }}
        run: |
          echo "${AICORE_SECRET}" | base64 -d > aicore-secret.yaml
          echo "AICORE_CLIENT_ID=$(yq eval '.stringData.clientid' aicore-secret.yaml)" >> $GITHUB_OUTPUT
          echo "AICORE_CLIENT_SECRET=$(yq eval '.stringData.clientsecret' aicore-secret.yaml)" >> $GITHUB_OUTPUT
          echo "AICORE_AUTH_URL=$(yq eval '.stringData.auth_url' aicore-secret.yaml)" >> $GITHUB_OUTPUT
          echo "AICORE_BASE_URL=$(yq eval '.stringData.base_url' aicore-secret.yaml)" >> $GITHUB_OUTPUT
          echo "AICORE_RESOURCE_GROUP=$(yq eval '.stringData.resource_group' aicore-secret.yaml)" >> $GITHUB_OUTPUT
          # cleanup
          rm -f aicore-secret.yaml

      - name: Run integration tests
        env:
          LOG_LEVEL: "DEBUG"
          # AI Core configurations.
          AICORE_CLIENT_ID: ${{ steps.int-tests-configs.outputs.AICORE_CLIENT_ID }}
          AICORE_CLIENT_SECRET: ${{ steps.int-tests-configs.outputs.AICORE_CLIENT_SECRET }}
          AICORE_AUTH_URL: ${{ steps.int-tests-configs.outputs.AICORE_AUTH_URL }}
          AICORE_BASE_URL: ${{ steps.int-tests-configs.outputs.AICORE_BASE_URL }}
          AICORE_RESOURCE_GROUP: ${{ steps.int-tests-configs.outputs.AICORE_RESOURCE_GROUP }}
          # Gardener test cluster configurations.
          TEST_CLUSTER_URL: ${{ secrets.GARDENER_TEST_CLUSTER_URL }}
          TEST_CLUSTER_CA_DATA: ${{ secrets.GARDENER_TEST_CLUSTER_CA_DATA }}
          TEST_CLUSTER_AUTH_TOKEN: ${{ secrets.GARDENER_TEST_CLUSTER_AUTH_TOKEN }}
        run: |
          echo "${{ secrets.MODELS }}" > config/config.yml
          poetry run poe test-integration